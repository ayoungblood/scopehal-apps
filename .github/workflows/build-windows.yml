name: Build-windows

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  VULKAN_SDK_VERSION: 1.3.275.0

jobs:
  Windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: ucrt64,  env: ucrt-x86_64 }
          - { sys: clang64, env: clang-x86_64 }
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0



    - name: Install Chocolatey
      shell: pwsh
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; `
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; `
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install WiX Toolset
      shell: pwsh
      run: |
        choco install wixtoolset --version=3.14.1 -y

    - name: Install dependencies
      uses: msys2/setup-msys2@v2
      with:
        update: true
        msystem: ${{matrix.sys}}
        install: >-
          git
          wget
        pacboy: >-
          cmake:p
          toolchain:p
          libsigc++:p
          cairomm:p
          yaml-cpp:p
          glfw:p
          catch:p
          vulkan-headers:p
          vulkan-loader:p
          shaderc:p
          glslang:p
          spirv-tools:p
          ffts:p
          hidapi:p

    - name: Environment debug
      run: |
        echo "VULKAN_SDK_VERSION: $VULKAN_SDK_VERSION"
        echo "RUNNER_OS: ${{ runner.os }}"
        echo "GITHUB_JOB: ${{ github.job }}"
        echo "GITHUB_RUN_NUMBER: ${{ github.run_number }}"
        python -c "import os; print(os.cpu_count())"
        python -c "import multiprocessing; print(multiprocessing.cpu_count())"

    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -GNinja -DWIXPATH="C:/Program Files (x86)/WiX Toolset v3.14/bin"
        ninja -j4

    - name: Test
      if: ${{ false }}
      shell: msys2 {0}
      run: |
        ninja test

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ngscopeclient-build-windows-${{ runner.os }}-${{ matrix.env }}-${{ github.job }}
        path: build

    # - name: Upload Artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: glscopeclient-windows-${{ runner.os }}-${{ github.job }}
    #     path: msys2/*.zst

    # - name: Upload Artifacts (ngscopeclient portable zip)
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ngscopeclient-windows-portable-${{ runner.os }}-${{ github.job }}
    #     path: build/dist/ngscopeclient*.zip

    # - name: Upload Artifacts (ngscopeclient MSI)
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ngscopeclient-${{ runner.os }}-${{ github.job }}.msi
    #     path: build/dist/ngscopeclient*.msi
